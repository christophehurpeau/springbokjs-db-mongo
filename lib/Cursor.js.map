{"version":3,"sources":["../src/Cursor.js"],"names":[],"mappings":"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","file":"src/Cursor.js","sourcesContent":["var AbstractCursor = require('springbokjs-db/lib/AbstractCursor').AbstractCursor;\n\nexport class Cursor extends AbstractCursor {\n    constructor(cursor, store, query) {\n        this._cursor = cursor;\n        this._store = store;\n        this._query = query;\n    }\n\n    get query() {\n        return this._query;\n    }\n\n    advance(count) {\n        this._cursor.skip(count);\n        return this;\n    }\n\n    next() {\n        return new Promise((resolve, reject) => {\n            this._cursor.nextObject((err, value) => {\n                if (err) {\n                    return reject(err);\n                }\n                this._result = value;\n                this.key = value && value._id;\n                resolve(this.key);\n            });\n        });\n    }\n\n    limit(newLimit) {\n        return new Promise((resolve, reject) => {\n            this._cursor.limit(newLimit, (err) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve();\n            });\n        });\n    }\n\n    count(applyLimit) {\n        return new Promise((resolve, reject) => {\n            this._cursor.count(applyLimit, (err, result) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(result);\n            });\n        });\n    }\n\n    result() {\n        return Promise.resolve(this._result);\n    }\n\n    remove() {\n        return this._store.deleteByKey(this.key);\n    }\n\n    forEach(callback) {\n        return this.forEachResults((result) => {\n            return callback(this._store.toVO(result));\n        });\n    }\n\n    forEachResults(callback) {\n        return new Promise((resolve, reject) => {\n            var waitFor = 0;\n            this._cursor.each((err, result) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (result === null) {\n                    // end !\n                    this.close();\n                    if (waitFor === 0) {\n                        resolve();\n                    }\n                    return;\n                }\n                try {\n                    var result = callback(result);\n                    if (result && typeof result.then === 'function') {\n                        waitFor++;\n                        result.then(() => {\n                            if (--waitFor === 0) {\n                                resolve();\n                            }\n                        }).catch(reject);\n                    }\n                } catch (err) {\n                    console.log(err.stack || err.message);\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    toArray() {\n        return new Promise((resolve, reject) => {\n            this._cursor.toArray((err, results) => {\n                if (err) {\n                    return reject(err);\n                }\n                try {\n                    resolve(results.map((v => this._store.toVO(v))));\n                } catch(err) {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    close() {\n        if (this._cursor) {\n            this._cursor.close();\n            this._cursor = this._store = this._result = undefined;\n        }\n        return Promise.resolve();\n    }\n}\n"]}